# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- main

pool:
  vmImage: 'ubuntu-18.04'

stages:
  - stage: preparation
    jobs:
      - job: version
        displayName: 'Determine Version'
        steps:
          - bash: |
              VERSION=$(git describe --long --always)
              echo "##vso[build.updatebuildnumber]$VERSION"
            displayName: "Set version"

  - stage: vernemq
    displayName: 'VerneMQ'
    dependsOn: preparation
    jobs:
      - job: build
        displayName: Build
        steps:
        - script: |
            sudo apt -y install erlang-src
            wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | sudo apt-key add -
            echo "deb https://packages.erlang-solutions.com/ubuntu bionic contrib" | sudo tee /etc/apt/sources.list.d/rabbitmq.list
            sudo apt update
            sudo apt -y install erlang libsnappy-dev libcrypto++-dev
            sudo apt -f install
          displayName: 'Setup environment'

        - script: |
            make rel
          displayName: 'make'

        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(Build.SourcesDirectory)/_build/default/rel/vernemq'
            includeRootFolder: false
            archiveType: 'tar'
            archiveFile: '$(Build.ArtifactStagingDirectory)/vernemq.tar.gz'
            replaceExistingArchive: true

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)/vernemq.tar.gz'
            artifact: 'vernemq'
            publishLocation: 'pipeline'